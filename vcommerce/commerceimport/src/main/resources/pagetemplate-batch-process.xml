<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:batch="http://www.springframework.org/schema/batch" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
 
 	<import resource="classpath:commerceimport-spring.xml"/>
 
    <!-- JobRepository and JobLauncher are configuration/setup classes -->
    <bean id="jobRepository" class="org.springframework.batch.core.repository.support.MapJobRepositoryFactoryBean" />
 
    <bean id="jobLauncher"   class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
        <property name="jobRepository" ref="jobRepository" />
    </bean>
 
 
    <bean id="multiResourceItemReader" class="com.commerceimport.batch.custom.CommerceMultiResourceItemReader">
        <property name="resources" value="classpath:content/csv/PageTemplateData*.txt" />
        <property name="delegate" ref="flatFileItemReader" />
    </bean>
 
    <!-- ItemReader reads a complete line one by one from input file -->
    <bean id="flatFileItemReader" class="org.springframework.batch.item.file.FlatFileItemReader"  scope="step">
        <property name="lineMapper" ref="template"/>
    </bean>
 	
 	<bean id="template" class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
 		<property name="fieldSetMapper" ref="pageTemplateFieldSetMapper"/>
 		<property name="lineTokenizer" ref="delimiterBean"/>
 	</bean>
 	<bean id="delimiterBean" class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
        <property name="delimiter" value=";" />
    </bean>
 	<bean id="pageTemplateFieldSetMapper" class="com.commerceimport.content.PageTemplateFieldSetMapper">
 		<property name="pageTemplateService" ref="pageTemplateService"/>
 		<property name="contentSlotService" ref="contentSlotService"/>
 	</bean>
 	
 	<bean class="org.springframework.orm.hibernate3.HibernateTemplate" id="hibernateTemplate" >
    	<property name="sessionFactory" ref="importSessionFactory" />
	</bean>
    <!-- ItemWriter which writes data to database -->
    <bean id="databaseItemWriter" class="com.commerceimport.HibernateItemWriter">
        <property name="hibernateTemplate" ref="hibernateTemplate"/>
    </bean>
 
 
    <!-- Optional ItemProcessor to perform business logic/filtering on the input records -->
    <bean id="itemProcessor" class="com.commerceimport.content.TemplateDataItemProcessor" />
 
    <!-- Optional JobExecutionListener to perform business logic before and after the job -->
    <bean id="jobListener" class="com.commerceimport.content.PageTemplateJobListener" />
 
 
    <!-- Actual Job -->
    <batch:job id="pageTemplateImportJob">
        <batch:step id="step1">
            <batch:tasklet transaction-manager="importTransactionManager">
                <batch:chunk reader="multiResourceItemReader" writer="databaseItemWriter"
                    processor="itemProcessor" commit-interval="10" />
            </batch:tasklet>
        </batch:step>
        <batch:listeners>
            <batch:listener ref="jobListener" />
        </batch:listeners>
    </batch:job>
 
</beans>